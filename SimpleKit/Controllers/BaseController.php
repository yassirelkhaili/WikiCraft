<?php

namespace SimpleKit\Controllers;

class BaseController {    
    /**
     * baseAssetPath
     *
     * @var string
     */
    protected $baseAssetPath = "../public/frontend/build/static";
      
    /**
     * getReactContent
     *
     * @param  string $contentDir React static css or js directory names
     * @return string React javascript or stylesheet static directory path
     */
    protected function getReactContent(string $contentDir): string {
        $fullPath = $this->baseAssetPath . "/" . $contentDir;
        if (is_dir($fullPath)) {
            $mediaFiles = scandir($fullPath);
            if (is_array($mediaFiles)) {
                foreach ($mediaFiles as $key => $mediaFile) {
                    if (count(explode('.', $mediaFile)) === 3 && substr($mediaFile, 0, 4) === 'main') {
                        $fullPath .= $mediaFiles[$key];
                    }
                }
            } else {
                return '';
            }
        } else {
            return '';
        }
        return file_exists($fullPath) ? $fullPath : '';
    }

    /**
     * Returns an array of file system paths to media files generated by react
     * @param string $contentDir media directory name
     * @return array  array of paths to react generated media 
     */
    protected function getMediaContent (string $contentDir): array {
        $mediaContent = [];
        $fullPath = $this->baseAssetPath . "/" . $contentDir;
        if (is_dir($fullPath)) {
            $mediaFiles = scandir($fullPath);
            if (is_array($mediaFiles)) {
                foreach ($mediaFiles as $key => $mediaFile) {
                    if ($key > 1) {
                        $finalPath = $fullPath . $mediaFile;
                        $mediaIdent = explode('.', $mediaFile)[0];
                        $mediaContent[$mediaIdent] = $finalPath;
                    }
                }
            } else {
                return [];
            }
        } else {
            return [];
        }
        return $mediaContent;
    }

    private function generateCsrfToken () {
        if (empty($_SESSION['csrf_token'])) {
            $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
        }
        return $_SESSION['csrf_token'];
    }

    protected function render(string $view, array $data = [], string $title = '') {
        $title = $title ?: $_ENV["APP_NAME"];
        $data = array_merge($data, ['jsurl' => $this->getReactContent("js/")], ['cssurl' => $this->getReactContent("css/")], ['media' => $this->getMediaContent("media/")], ['pageTitle' => $title]);
        extract($data);
        include dirname(__DIR__) . "/Views/layouts/header.php";
        include dirname(__DIR__) . "/Views/$view.php";
        include dirname(__DIR__) . "/Views/layouts/footer.php";
    }
}